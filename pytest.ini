[tool:pytest]
# Pytest configuration for Social Media Reports System
# QA-Engineer Implementation

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=95
    --junitxml=test-results.xml
    --html=test-report.html
    --self-contained-html

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    functional: Functional tests
    performance: Performance tests
    security: Security tests
    ui: User interface tests
    api: API tests
    database: Database tests
    slow: Slow running tests
    smoke: Smoke tests
    regression: Regression tests
    critical: Critical functionality tests

# Test timeout
timeout = 300

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */node_modules/*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

